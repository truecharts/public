---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: kube-prometheus-stack
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 70.10.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    crds:
      enabled: true
      upgradeJob:
        enabled: true
        forceConflicts: true
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      enabled: false
    kubeEtcd:
      service:
        selector:
          component: kube-apiserver
    kubeProxy:
      enabled: false
    prometheus:
      ingress:
        enabled: false
      prometheusSpec:
        disableCompaction: true
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - memory-snapshot-on-shutdown
        # Prometheus metrics retention time in PV
        retention: 14d
        retentionSize: 50GB
        # External labels to add to any time series or
        # alerts when communicating with external systems
        externalLabels:
          cluster: cluster_main
          env: prod
        # High availability
        replicas: 1
        resources:
          requests:
            cpu: 100m
            memory: 500Mi
          limits:
            memory: 2000Mi
        # storageSpec:
        #   volumeClaimTemplate:
        #     spec:
        #       resources:
        #         requests:
        #           storage: 60Gi

    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      # metricLabelsAllowlist:
      #   - pods=[*]
      #   - deployments=[*]
      #   - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: true
      defaultDashboardsEnabled: true
      forceDeployDatasources: true

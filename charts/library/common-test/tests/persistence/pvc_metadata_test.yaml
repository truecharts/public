suite: persistence pvc metadata test
templates:
  - common.yaml
chart:
  appVersion: &appVer v9.9.9
release:
  name: test-release-name
  namespace: test-release-namespace
tests:
  - it: should pass with pvc created with labels and annotations
    set:
      label1: label1
      label2: global_label2
      annotation1: annotation1
      annotation2: global_annotation2
      global:
        labels:
          g_label1: global_label1
          g_label2: "{{ .Values.label2 }}"
        annotations:
          g_annotation1: global_annotation1
          g_annotation2: "{{ .Values.annotation2 }}"
      persistence:
        my-volume1:
          enabled: true
          type: pvc
          labels:
            label1: "{{ .Values.label1 }}"
            label2: label2
          annotations:
            annotation1: "{{ .Values.annotation1 }}"
            annotation2: annotation2
          annotationsList:
            - name: some-annotation
              value: some-value
          labelsList:
            - name: some-label
              value: some-value
    asserts:
      - documentIndex: &pvcDoc 0
        isKind:
          of: PersistentVolumeClaim
      - documentIndex: *pvcDoc
        isAPIVersion:
          of: v1
      - documentIndex: *pvcDoc
        equal:
          path: metadata.annotations
          value:
            annotation1: annotation1
            annotation2: annotation2
            g_annotation1: global_annotation1
            g_annotation2: global_annotation2
            some-annotation: some-value
      - documentIndex: *pvcDoc
        equal:
          path: metadata.labels
          value:
            app: common-test-1.0.0
            release: test-release-name
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            app.kubernetes.io/name: common-test
            app.kubernetes.io/instance: test-release-name
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/version: *appVer
            g_label1: global_label1
            g_label2: global_label2
            label1: label1
            label2: label2
            some-label: some-value
      - documentIndex: *pvcDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-my-volume1
      - documentIndex: *pvcDoc
        equal:
          path: metadata.namespace
          value: test-release-namespace

  - it: should pass with pvc created with retain set to true
    set:
      persistence:
        my-volume1:
          enabled: true
          type: pvc
          retain: true
    asserts:
      - documentIndex: *pvcDoc
        isKind:
          of: PersistentVolumeClaim
      - documentIndex: *pvcDoc
        equal:
          path: metadata.annotations
          value:
            "helm.sh/resource-policy": keep
      - documentIndex: *pvcDoc
        equal:
          path: metadata.labels
          value:
            app: common-test-1.0.0
            release: test-release-name
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            app.kubernetes.io/name: common-test
            app.kubernetes.io/instance: test-release-name
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/version: *appVer

  - it: should pass with pvc created with object namespace from tpl
    set:
      key: some-namespace
      persistence:
        my-volume1:
          enabled: true
          type: pvc
          namespace: "{{ .Values.key }}"
    asserts:
      - documentIndex: *pvcDoc
        equal:
          path: metadata.namespace
          value: some-namespace

  - it: should pass with pvc created with global namespace from tpl
    set:
      key: global-namespace
      global:
        namespace: "{{ .Values.key }}"
      persistence:
        my-volume1:
          enabled: true
          type: pvc
    asserts:
      - documentIndex: *pvcDoc
        equal:
          path: metadata.namespace
          value: global-namespace

  - it: should pass with pvc created with root namespace from tpl
    set:
      key: local-namespace
      namespace: "{{ .Values.key }}"
      global:
        namespace: global-namespace
      persistence:
        my-volume1:
          enabled: true
          type: pvc
    asserts:
      - documentIndex: *pvcDoc
        equal:
          path: metadata.namespace
          value: local-namespace

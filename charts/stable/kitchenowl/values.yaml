image:
  repository: docker.io/tombursch/kitchenowl-web
  pullPolicy: IfNotPresent
  tag: latest@sha256:f112eac103aab4701ca41c62197f2aa3627b529cb265997260686e8f22727445
backendImage:
  repository: docker.io/tombursch/kitchenowl
  pullPolicy: IfNotPresent
  tag: latest@sha256:60d491c59c329c34795f2ac8520fbc03feaa09ae82957fac46c944fecd077892

service:
  main:
    enabled: true
    # Target frontend pod
    targetSelector: frontend
    ports:
      main:
        enabled: true
        # Target frontend container
        targetSelector: frontend
        protocol: http
        targetPort: 80
        port: 10246
  backend:
    enabled: true
    # Target main(backend) pod
    targetSelector: main
    ports:
      backend:
        enabled: true
        # Target main(backend) container
        targetSelector: main
        protocol: http
        targetPort: 5000
        port: 10247

persistence:
  data:
    enabled: true
    targetSelector:
      main:
        main:
          mountPath: /data

portal:
  open:
    enabled: true

securityContext:
  container:
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0

workload:
  main:
    enabled: true
    primary: true
    type: Deployment
    podSpec:
      containers:
        main:
          # Backend
          enabled: true
          primary: true
          imageSelector: backendImage
          env:
            FRONT_URL: ""
            OIDC_ISSUER: ""
            OIDC_CLIENT_ID: ""
            OIDC_CLIENT_SECRET: ""
            APPLE_CLIENT_ID: ""
            APPLE_CLIENT_SECRET: ""
            GOOGLE_CLIENT_ID: ""
            GOOGLE_CLIENT_SECRET: ""
            JWT_SECRET_KEY:
              secretKeyRef:
                name: kitchenowl-secrets
                key: JWT_SECRET_KEY
            STORAGE_PATH: "{{ .Values.persistence.data.targetSelector.main.main.mountPath }}"
            DB_DRIVER: "postgresql"
            DB_HOST:
              secretKeyRef:
                name: cnpg-main-urls
                key: host
            DB_NAME: "{{ .Values.cnpg.main.database }}"
            DB_USER: "{{ .Values.cnpg.main.user }}"
            DB_PASSWORD:
              secretKeyRef:
                name: cnpg-main-user
                key: password
          probes:
            liveness:
              enabled: true
              type: exec
              port: "{{ .Values.service.backend.ports.backend.targetPort }}"
              command:
                - uwsgi_curl
                - localhost:5000
                - /api/health/8M4F88S8ooi4sMbLBfkkV7ctWwgibW6V
            readiness:
              enabled: true
              type: exec
              port: "{{ .Values.service.backend.ports.backend.targetPort }}"
              command:
                - uwsgi_curl
                - localhost:5000
                - /api/health/8M4F88S8ooi4sMbLBfkkV7ctWwgibW6V
            startup:
              enabled: true
              type: tcp
              port: "{{ .Values.service.backend.ports.backend.targetPort }}"
  frontend:
    enabled: true
    type: Deployment
    strategy: RollingUpdate
    replicas: 1
    podSpec:
      containers:
        frontend:
          enabled: true
          primary: true
          env:
            BACK_URL: '{{ printf "%s-backend:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.backend.ports.backend.port }}'
          probes:
            liveness:
              type: http
              path: /
              port: "{{ .Values.service.main.ports.main.targetPort }}"
            readiness:
              type: http
              path: /
              port: "{{ .Values.service.main.ports.main.targetPort }}"
            startup:
              type: tcp
              port: "{{ .Values.service.main.ports.main.targetPort }}"
# Enabled postgres
cnpg:
  main:
    enabled: true
    user: kitchenowl
    database: kitchenowl

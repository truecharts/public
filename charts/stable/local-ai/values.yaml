image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.27.0@sha256:3a43cff852914e827dd783bc0c282b2c621c41a4cf0555808d77376f5846437c
ffmpegImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.27.0-ffmpeg-core@sha256:f4030755af63fc1b607bd83f8230d3faacb7ce4caa2e5fbfefe4167045c63138
cublasCuda12Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.27.0-cublas-cuda12-core@sha256:4c9633eeb2a0dd9198ffda7b68834a6bd714ae276f9d34e27ffa4a1f1b5d5749
cublasCuda12FfmpegImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.27.0-cublas-cuda12-ffmpeg-core@sha256:1c381bab3cee60debbc94e73ad43017a20944ad05a3ac8c9fe229f10f1e1c3ba
cublasCuda11Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.27.0-cublas-cuda11-core@sha256:f798156045e4f2f167adf0cf2ee4428b1863eadc234349c42e2c7dbcc8b64b67
cublasCuda11FfmpegImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.27.0-cublas-cuda11-ffmpeg-core@sha256:41fba75f830532615aab58ab8baca2234714f68be58b26005e9eeab33607a851
allInOneCuda12Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.27.0-aio-gpu-nvidia-cuda-12@sha256:a7912acd1e80b3d779ba31783ae40728b5be371d3d22db1f2b03f8ad6407afdb
allInOneCuda11Image:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.27.0-aio-gpu-nvidia-cuda-11@sha256:90c00c5094287ae3500c971dc42099a25bcdcb333528a7c1cb2ae0f84688f0ec
allInOneCpuImage:
  repository: docker.io/localai/localai
  pullPolicy: IfNotPresent
  tag: v2.27.0-aio-cpu@sha256:534b9ff2d2875d77cedcb7017af821af9668b7906f916e49efbd7c30b7dc37ff
securityContext:
  container:
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    runAsUser: 0
    runAsGroup: 0
service:
  main:
    ports:
      main:
        protocol: http
        port: 8080
localai:
  # Specify a build type. Available: cublas, openblas, clblas.
  build_type: "openblas"
  debug: false
  cors: true
  cors_allow_origins: "*"
  galleries: []
  #  - name: model-gallery
  #    url: github:go-skynet/model-gallery/index.yaml
  preload_models: []
  #    url: github:go-skynet/model-gallery/gpt4all-j.yaml
  # UPLOAD_LIMIT
workload:
  main:
    podSpec:
      containers:
        main:
          probes:
            liveness:
              enabled: true
              type: http
              path: /readyz
            readiness:
              enabled: true
              type: http
              path: /readyz
            startup:
              enabled: true
              type: tcp
          imageSelector: image
          env:
            ADDRESS: ":{{ .Values.service.main.ports.main.port }}"
            MODELS_PATH: "{{ .Values.persistence.models.mountPath }}"
            IMAGE_PATH: "{{ .Values.persistence.images.mountPath }}"
            BUILD_TYPE: "{{ .Values.localai.build_type }}"
            # breaks chart if true, keep it false.
            REBUILD: false
            DEBUG: "{{ .Values.localai.debug }}"
            CORS: "{{ .Values.localai.cors }}"
            GALLERIES: "{{ toJson .Values.localai.galleries }}"
            PRELOAD_MODELS: "{{ toJson .Values.localai.preload_models }}"
            CORS_ALLOW_ORIGINS: "{{ .Values.localai.cors_allow_origins }}"
persistence:
  models:
    enabled: true
    mountPath: "/models"
  images:
    enabled: true
    mountPath: "/images"
portal:
  open:
    enabled: false
updated: true

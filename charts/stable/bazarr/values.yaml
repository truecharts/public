image:
  repository: ghcr.io/home-operations/bazarr
  pullPolicy: IfNotPresent
  tag: 1.5.2@sha256:dbc87e5ce9e199709188e152e82b3ff5d33e6521a1b3d61e465aa75b4b739e7f
exportarrImage:
  repository: ghcr.io/onedr0p/exportarr
  tag: v2.2.0@sha256:320b0ea7399f4b9af4741dcdddd7d40c05c36b0359679305d8a54df4e97065df
  pullPolicy: IfNotPresent
service:
  main:
    ports:
      main:
        port: 6767
        protocol: http
        targetPort: 6767
  metrics:
    enabled: "{{ .Values.metrics.main.enabled }}"
    type: ClusterIP
    ports:
      metrics:
        enabled: true
        port: 7879

workload:
  main:
    podSpec:
      containers:
        exportarr:
          enabled: "{{ .Values.metrics.main.enabled }}"
          imageSelector: exportarrImage
          args:
            - bazarr
          probes:
            liveness:
              enabled: true
              type: http
              path: /healthz
              port: "{{ .Values.service.metrics.ports.metrics.port }}"
            readiness:
              enabled: true
              type: http
              path: /healthz
              port: "{{ .Values.service.metrics.ports.metrics.port }}"
            startup:
              enabled: true
              type: http
              path: /healthz
              port: "{{ .Values.service.metrics.ports.metrics.port }}"
          env:
            INTERFACE: 0.0.0.0
            PORT: "{{ .Values.service.metrics.ports.metrics.port }}"
            URL: '{{ printf "http://%v:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.main.ports.main.port }}'
            APIKEY: "{{ .Values.metrics.main.apiKey }}"

persistence:
  config:
    enabled: true
    targetSelector:
      main:
        main:
          mountPath: /config
        exportarr:
          mountPath: /config
          readOnly: true

metrics:
  main:
    enabled: false
    type: "servicemonitor"
    endpoints:
      - port: metrics
        path: /metrics
    targetSelector: metrics
    # Required for exportarr
    apiKey: ""

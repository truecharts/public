image:
  repository: ghcr.io/hoarder-app/hoarder
  pullPolicy: IfNotPresent
  tag: 0.23.0@sha256:d8b746f6d4d3a7d159804b5d4785869a42aff0f3f07d3b493cc16a423ad2d43a
chromeImage:
  repository: gcr.io/zenika-hub/alpine-chrome
  pullPolicy: IfNotPresent
  tag: 124@sha256:1a0046448e0bb6c275c88f86e01faf0de62b02ec8572901256ada0a8c08be23f
meiliImage:
  repository: docker.io/getmeili/meilisearch
  pullPolicy: IfNotPresent
  tag: v1.13.3@sha256:bed3fb650e62da53145777204891159242f6ea4ce69e215b36223af4aa64a0ae

securityContext:
  container:
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    runAsUser: 0
    runAsGroup: 0

service:
  main:
    ports:
      main:
        protocol: http
        port: 10687
        targetPort: 3000
  meilisearch:
    enabled: true
    ports:
      meilisearch:
        enabled: true
        protocol: http
        port: 7700
        targetPort: 7700        
  chrome:
    enabled: true
    ports:
      chrome:
        enabled: true
        protocol: http
        port: 9222
        targetPort: 9222        

workload:
  main:
    podSpec:
      containers:
        main:
          primary: true
          imageSelector: image
          probes:
            liveness:
              enabled: true
              type: http
              path: /
              port: "{{ .Values.service.main.ports.main.targetPort }}"
            readiness:
              enabled: true
              type: http
              path: /
              port: "{{ .Values.service.main.ports.main.targetPort }}"
            startup:
              enabled: true
              type: tcp
              port: "{{ .Values.service.main.ports.main.targetPort }}"
          env:
              MEILI_ADDR: '{{ printf "http://%v-meilisearch:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.meilisearch.ports.meilisearch.targetPort }}'
              MEILI_MASTER_KEY:
                secretKeyRef:
                  name: hoarder-secrets
                  key: MEILI_MASTER_KEY                 
              BROWSER_WEB_URL: '{{ printf "http://%v-chrome:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.chrome.ports.chrome.targetPort }}'
              # You almost never want to change the value of the DATA_DIR variable.
              # If you want to mount a custom directory, change the volume mapping above instead.
              DATA_DIR: /data # DON'T CHANGE THIS
              NEXTAUTH_URL:
              NEXTAUTH_SECRET:
                secretKeyRef:
                  name: hoarder-secrets
                  key: NEXTAUTH_SECRET              

  meilisearch:
    enabled: true
    type: Deployment
    podSpec:
      containers:
        meilisearch:
          enabled: true
          imageSelector: meiliImage
          resources:
            excludeExtra: true
          probes:
            liveness:
              enabled: true
              type: http
              path: /
              port: "{{ .Values.service.meilisearch.ports.meilisearch.port }}"
            readiness:
              enabled: true
              type: http
              path: /
              port: "{{ .Values.service.meilisearch.ports.meilisearch.port }}"
            startup:
              enabled: true
              type: tcp
              port: "{{ .Values.service.meilisearch.ports.meilisearch.port }}"
          env:
              MEILI_MASTER_KEY:
                secretKeyRef:
                  name: hoarder-secrets
                  key: MEILI_MASTER_KEY 
              MEILI_NO_ANALYTICS: true
  chrome:
    enabled: true
    type: Deployment
    podSpec:
      containers:
        meilisearch:
          enabled: true
          imageSelector: chromeImage
          resources:
            excludeExtra: true
          probes:
            liveness:
              enabled: true
              type: http
              path: /
              port: "{{ .Values.service.chrome.ports.chrome.targetPort }}"
            readiness:
              enabled: true
              type: http
              path: /
              port: "{{ .Values.service.chrome.ports.chrome.targetPort }}"
            startup:
              enabled: true
              type: tcp
              port: "{{ .Values.service.chrome.ports.chrome.port }}"


persistence:
  data:
    enabled: true
    targetSelector:
      main:
        main:
          mountPath: "/data"
  meili_data:
    enabled: true
    targetSelector:
      meilisearch:
        meilisearch:
          mountPath: "/meili_data"

portal:
  open:
    enabled: true
